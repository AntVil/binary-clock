

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Nov 30 23:00:34 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4520 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _TMR1	set	4046
    53  0000                     _T1CON	set	4045
    54  0000                     _PIE1bits	set	3997
    55  0000                     _INTCON	set	4082
    56  0000                     _TMR1IF	set	31984
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61  00016E                     __pcinit:
    62                           	callstack 0
    63  00016E                     start_initialization:
    64                           	callstack 0
    65  00016E                     __initialization:
    66                           	callstack 0
    67                           
    68                           ; Clear objects allocated to COMRAM (6 bytes)
    69  00016E  6A06               	clrf	(__pbssCOMRAM+5)& (0+255),c
    70  000170  6A05               	clrf	(__pbssCOMRAM+4)& (0+255),c
    71  000172  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    72  000174  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    73  000176  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    74  000178  6A01               	clrf	__pbssCOMRAM& (0+255),c
    75  00017A                     end_of_initialization:
    76                           	callstack 0
    77  00017A                     __end_of__initialization:
    78                           	callstack 0
    79  00017A  900D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    80  00017C  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    81  00017E  0100               	movlb	0
    82  000180  EFA9  F000         	goto	_main	;jump to C main() function
    83                           
    84                           	psect	bssCOMRAM
    85  000001                     __pbssCOMRAM:
    86                           	callstack 0
    87  000001                     _second:
    88                           	callstack 0
    89  000001                     	ds	2
    90  000003                     _minute:
    91                           	callstack 0
    92  000003                     	ds	2
    93  000005                     _hour:
    94                           	callstack 0
    95  000005                     	ds	2
    96                           
    97                           	psect	cstackCOMRAM
    98  000007                     __pcstackCOMRAM:
    99                           	callstack 0
   100  000007                     ?___awmod:
   101                           	callstack 0
   102  000007                     ___awmod@dividend:
   103                           	callstack 0
   104                           
   105                           ; 2 bytes @ 0x0
   106  000007                     	ds	2
   107  000009                     ___awmod@divisor:
   108                           	callstack 0
   109                           
   110                           ; 2 bytes @ 0x2
   111  000009                     	ds	2
   112  00000B                     ___awmod@counter:
   113                           	callstack 0
   114                           
   115                           ; 1 bytes @ 0x4
   116  00000B                     	ds	1
   117  00000C                     ___awmod@sign:
   118                           	callstack 0
   119                           
   120                           ; 1 bytes @ 0x5
   121  00000C                     	ds	1
   122  00000D                     
   123                           ; 1 bytes @ 0x6
   124 ;;
   125 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   126 ;;
   127 ;; *************** function _main *****************
   128 ;; Defined at:
   129 ;;		line 34 in file "Main.c"
   130 ;; Parameters:    Size  Location     Type
   131 ;;		None
   132 ;; Auto vars:     Size  Location     Type
   133 ;;		None
   134 ;; Return value:  Size  Location     Type
   135 ;;                  1    wreg      void 
   136 ;; Registers used:
   137 ;;		wreg, status,2
   138 ;; Tracked objects:
   139 ;;		On entry : 0/0
   140 ;;		On exit  : 0/0
   141 ;;		Unchanged: 0/0
   142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   143 ;;      Params:         0       0       0       0       0       0       0
   144 ;;      Locals:         0       0       0       0       0       0       0
   145 ;;      Temps:          0       0       0       0       0       0       0
   146 ;;      Totals:         0       0       0       0       0       0       0
   147 ;;Total ram usage:        0 bytes
   148 ;; Hardware stack levels required when called: 2
   149 ;; This function calls:
   150 ;;		Nothing
   151 ;; This function is called by:
   152 ;;		Startup code after reset
   153 ;; This function uses a non-reentrant model
   154 ;;
   155                           
   156                           	psect	text0
   157  000152                     __ptext0:
   158                           	callstack 0
   159  000152                     _main:
   160                           	callstack 29
   161  000152                     
   162                           ;Main.c: 36:     INTCON = 0b11000000;
   163  000152  0EC0               	movlw	192
   164  000154  6EF2               	movwf	242,c	;volatile
   165  000156                     
   166                           ;Main.c: 39:     PIE1bits.TMR1IE = 1;
   167  000156  809D               	bsf	157,0,c	;volatile
   168                           
   169                           ;Main.c: 42:     T1CON = 0b00000001;
   170  000158  0E01               	movlw	1
   171  00015A  6ECD               	movwf	205,c	;volatile
   172  00015C                     
   173                           ;Main.c: 45:     TMR1IF = 0;
   174  00015C  909E               	bcf	3998,0,c	;volatile
   175                           
   176                           ;Main.c: 46:     TMR1 = 65535 - 1000 + 18;
   177  00015E  0EFC               	movlw	252
   178  000160  6ECF               	movwf	207,c	;volatile
   179  000162  0E29               	movlw	41
   180  000164  6ECE               	movwf	206,c	;volatile
   181  000166                     l31:
   182  000166  EFB3  F000         	goto	l31
   183  00016A  EF07  F000         	goto	start
   184  00016E                     __end_of_main:
   185                           	callstack 0
   186                           
   187 ;; *************** function _timer_overflow_interrupt *****************
   188 ;; Defined at:
   189 ;;		line 11 in file "Main.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;		None
   192 ;; Auto vars:     Size  Location     Type
   193 ;;		None
   194 ;; Return value:  Size  Location     Type
   195 ;;                  1    wreg      void 
   196 ;; Registers used:
   197 ;;		wreg, status,2, status,0, cstack
   198 ;; Tracked objects:
   199 ;;		On entry : 0/0
   200 ;;		On exit  : 0/0
   201 ;;		Unchanged: 0/0
   202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   203 ;;      Params:         0       0       0       0       0       0       0
   204 ;;      Locals:         0       0       0       0       0       0       0
   205 ;;      Temps:          0       0       0       0       0       0       0
   206 ;;      Totals:         0       0       0       0       0       0       0
   207 ;;Total ram usage:        0 bytes
   208 ;; Hardware stack levels used: 1
   209 ;; Hardware stack levels required when called: 1
   210 ;; This function calls:
   211 ;;		___awmod
   212 ;; This function is called by:
   213 ;;		Interrupt level 2
   214 ;; This function uses a non-reentrant model
   215 ;;
   216                           
   217                           	psect	intcode
   218  000008                     __pintcode:
   219                           	callstack 0
   220  000008                     _timer_overflow_interrupt:
   221                           	callstack 29
   222                           
   223                           ;incstack = 0
   224  000008  820D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   225  00000A  ED61  F000         	call	int_func,f	;refresh shadow registers
   226                           
   227                           	psect	intcode_body
   228  0000C2                     __pintcode_body:
   229                           	callstack 29
   230  0000C2                     int_func:
   231                           	callstack 29
   232  0000C2  0006               	pop		; remove dummy address from shadow register refresh
   233  0000C4                     
   234                           ;Main.c: 12:     if(TMR1IF){
   235  0000C4  A09E               	btfss	3998,0,c	;volatile
   236  0000C6  EF67  F000         	goto	i2u16_41
   237  0000CA  EF69  F000         	goto	i2u16_40
   238  0000CE                     i2u16_41:
   239  0000CE  EFA6  F000         	goto	i2l832
   240  0000D2                     i2u16_40:
   241  0000D2                     
   242                           ;Main.c: 13:         TMR1IF = 0;
   243  0000D2  909E               	bcf	3998,0,c	;volatile
   244  0000D4                     
   245                           ;Main.c: 14:         TMR1 = 65535 - 1000 + 18;
   246  0000D4  0EFC               	movlw	252
   247  0000D6  6ECF               	movwf	207,c	;volatile
   248  0000D8  0E29               	movlw	41
   249  0000DA  6ECE               	movwf	206,c	;volatile
   250  0000DC                     
   251                           ;Main.c: 16:         second++;
   252  0000DC  4A01               	infsnz	_second^0,f,c
   253  0000DE  2A02               	incf	(_second+1)^0,f,c
   254  0000E0                     
   255                           ;Main.c: 17:         if(second > 60){
   256  0000E0  BE02               	btfsc	(_second+1)^0,7,c
   257  0000E2  EF7C  F000         	goto	i2u17_41
   258  0000E6  5002               	movf	(_second+1)^0,w,c
   259  0000E8  E109               	bnz	i2u17_40
   260  0000EA  0E3D               	movlw	61
   261  0000EC  5C01               	subwf	_second^0,w,c
   262  0000EE  A0D8               	btfss	status,0,c
   263  0000F0  EF7C  F000         	goto	i2u17_41
   264  0000F4  EF7E  F000         	goto	i2u17_40
   265  0000F8                     i2u17_41:
   266  0000F8  EFA6  F000         	goto	i2l832
   267  0000FC                     i2u17_40:
   268  0000FC                     
   269                           ;Main.c: 18:             second = 0;
   270  0000FC  0E00               	movlw	0
   271  0000FE  6E02               	movwf	(_second+1)^0,c
   272  000100  0E00               	movlw	0
   273  000102  6E01               	movwf	_second^0,c
   274  000104                     
   275                           ;Main.c: 19:             minute++;
   276  000104  4A03               	infsnz	_minute^0,f,c
   277  000106  2A04               	incf	(_minute+1)^0,f,c
   278  000108                     
   279                           ;Main.c: 20:             if(minute > 60){
   280  000108  BE04               	btfsc	(_minute+1)^0,7,c
   281  00010A  EF90  F000         	goto	i2u18_41
   282  00010E  5004               	movf	(_minute+1)^0,w,c
   283  000110  E109               	bnz	i2u18_40
   284  000112  0E3D               	movlw	61
   285  000114  5C03               	subwf	_minute^0,w,c
   286  000116  A0D8               	btfss	status,0,c
   287  000118  EF90  F000         	goto	i2u18_41
   288  00011C  EF92  F000         	goto	i2u18_40
   289  000120                     i2u18_41:
   290  000120  EFA6  F000         	goto	i2l832
   291  000124                     i2u18_40:
   292  000124                     
   293                           ;Main.c: 21:                 minute = 0;
   294  000124  0E00               	movlw	0
   295  000126  6E04               	movwf	(_minute+1)^0,c
   296  000128  0E00               	movlw	0
   297  00012A  6E03               	movwf	_minute^0,c
   298  00012C                     
   299                           ;Main.c: 22:                 hour = (hour + 1) % 24;
   300  00012C  0E01               	movlw	1
   301  00012E  2405               	addwf	_hour^0,w,c
   302  000130  6E07               	movwf	___awmod@dividend^0,c
   303  000132  0E00               	movlw	0
   304  000134  2006               	addwfc	(_hour+1)^0,w,c
   305  000136  6E08               	movwf	(___awmod@dividend+1)^0,c
   306  000138  0E00               	movlw	0
   307  00013A  6E0A               	movwf	(___awmod@divisor+1)^0,c
   308  00013C  0E18               	movlw	24
   309  00013E  6E09               	movwf	___awmod@divisor^0,c
   310  000140  EC09  F000         	call	___awmod	;wreg free
   311  000144  C007  F005         	movff	?___awmod,_hour
   312  000148  C008  F006         	movff	?___awmod+1,_hour+1
   313  00014C                     i2l832:
   314                           
   315                           ;Main.c: 29:     __nop();
   316  00014C  F000               	nop	
   317  00014E  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   318  000150  0011               	retfie		f
   319  000152                     __end_of_timer_overflow_interrupt:
   320                           	callstack 0
   321                           
   322 ;; *************** function ___awmod *****************
   323 ;; Defined at:
   324 ;;		line 7 in file "D:\Applications\Programming\Programming Environments\xc8_compiler\pic\sources\c99\common\awmod.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;  dividend        2    0[COMRAM] int 
   327 ;;  divisor         2    2[COMRAM] int 
   328 ;; Auto vars:     Size  Location     Type
   329 ;;  sign            1    5[COMRAM] unsigned char 
   330 ;;  counter         1    4[COMRAM] unsigned char 
   331 ;; Return value:  Size  Location     Type
   332 ;;                  2    0[COMRAM] int 
   333 ;; Registers used:
   334 ;;		wreg, status,2, status,0
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   340 ;;      Params:         4       0       0       0       0       0       0
   341 ;;      Locals:         2       0       0       0       0       0       0
   342 ;;      Temps:          0       0       0       0       0       0       0
   343 ;;      Totals:         6       0       0       0       0       0       0
   344 ;;Total ram usage:        6 bytes
   345 ;; Hardware stack levels used: 1
   346 ;; This function calls:
   347 ;;		Nothing
   348 ;; This function is called by:
   349 ;;		_timer_overflow_interrupt
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353                           	psect	text2
   354  000012                     __ptext2:
   355                           	callstack 0
   356  000012                     ___awmod:
   357                           	callstack 29
   358  000012  0E00               	movlw	0
   359  000014  6E0C               	movwf	___awmod@sign^0,c
   360  000016  BE08               	btfsc	(___awmod@dividend+1)^0,7,c
   361  000018  EF12  F000         	goto	i2u10_40
   362  00001C  EF10  F000         	goto	i2u10_41
   363  000020                     i2u10_41:
   364  000020  EF18  F000         	goto	i2l784
   365  000024                     i2u10_40:
   366  000024  6C07               	negf	___awmod@dividend^0,c
   367  000026  1E08               	comf	(___awmod@dividend+1)^0,f,c
   368  000028  B0D8               	btfsc	status,0,c
   369  00002A  2A08               	incf	(___awmod@dividend+1)^0,f,c
   370  00002C  0E01               	movlw	1
   371  00002E  6E0C               	movwf	___awmod@sign^0,c
   372  000030                     i2l784:
   373  000030  BE0A               	btfsc	(___awmod@divisor+1)^0,7,c
   374  000032  EF1F  F000         	goto	i2u11_40
   375  000036  EF1D  F000         	goto	i2u11_41
   376  00003A                     i2u11_41:
   377  00003A  EF23  F000         	goto	i2l788
   378  00003E                     i2u11_40:
   379  00003E  6C09               	negf	___awmod@divisor^0,c
   380  000040  1E0A               	comf	(___awmod@divisor+1)^0,f,c
   381  000042  B0D8               	btfsc	status,0,c
   382  000044  2A0A               	incf	(___awmod@divisor+1)^0,f,c
   383  000046                     i2l788:
   384  000046  5009               	movf	___awmod@divisor^0,w,c
   385  000048  100A               	iorwf	(___awmod@divisor+1)^0,w,c
   386  00004A  B4D8               	btfsc	status,2,c
   387  00004C  EF2A  F000         	goto	i2u12_41
   388  000050  EF2C  F000         	goto	i2u12_40
   389  000054                     i2u12_41:
   390  000054  EF50  F000         	goto	i2l804
   391  000058                     i2u12_40:
   392  000058  0E01               	movlw	1
   393  00005A  6E0B               	movwf	___awmod@counter^0,c
   394  00005C  EF34  F000         	goto	i2l794
   395  000060                     i2l792:
   396  000060  90D8               	bcf	status,0,c
   397  000062  3609               	rlcf	___awmod@divisor^0,f,c
   398  000064  360A               	rlcf	(___awmod@divisor+1)^0,f,c
   399  000066  2A0B               	incf	___awmod@counter^0,f,c
   400  000068                     i2l794:
   401  000068  AE0A               	btfss	(___awmod@divisor+1)^0,7,c
   402  00006A  EF39  F000         	goto	i2u13_41
   403  00006E  EF3B  F000         	goto	i2u13_40
   404  000072                     i2u13_41:
   405  000072  EF30  F000         	goto	i2l792
   406  000076                     i2u13_40:
   407  000076                     i2l796:
   408  000076  5009               	movf	___awmod@divisor^0,w,c
   409  000078  5C07               	subwf	___awmod@dividend^0,w,c
   410  00007A  500A               	movf	(___awmod@divisor+1)^0,w,c
   411  00007C  5808               	subwfb	(___awmod@dividend+1)^0,w,c
   412  00007E  A0D8               	btfss	status,0,c
   413  000080  EF44  F000         	goto	i2u14_41
   414  000084  EF46  F000         	goto	i2u14_40
   415  000088                     i2u14_41:
   416  000088  EF4A  F000         	goto	i2l800
   417  00008C                     i2u14_40:
   418  00008C  5009               	movf	___awmod@divisor^0,w,c
   419  00008E  5E07               	subwf	___awmod@dividend^0,f,c
   420  000090  500A               	movf	(___awmod@divisor+1)^0,w,c
   421  000092  5A08               	subwfb	(___awmod@dividend+1)^0,f,c
   422  000094                     i2l800:
   423  000094  90D8               	bcf	status,0,c
   424  000096  320A               	rrcf	(___awmod@divisor+1)^0,f,c
   425  000098  3209               	rrcf	___awmod@divisor^0,f,c
   426  00009A  2E0B               	decfsz	___awmod@counter^0,f,c
   427  00009C  EF3B  F000         	goto	i2l796
   428  0000A0                     i2l804:
   429  0000A0  500C               	movf	___awmod@sign^0,w,c
   430  0000A2  B4D8               	btfsc	status,2,c
   431  0000A4  EF56  F000         	goto	i2u15_41
   432  0000A8  EF58  F000         	goto	i2u15_40
   433  0000AC                     i2u15_41:
   434  0000AC  EF5C  F000         	goto	i2l808
   435  0000B0                     i2u15_40:
   436  0000B0  6C07               	negf	___awmod@dividend^0,c
   437  0000B2  1E08               	comf	(___awmod@dividend+1)^0,f,c
   438  0000B4  B0D8               	btfsc	status,0,c
   439  0000B6  2A08               	incf	(___awmod@dividend+1)^0,f,c
   440  0000B8                     i2l808:
   441  0000B8  C007  F007         	movff	___awmod@dividend,?___awmod
   442  0000BC  C008  F008         	movff	___awmod@dividend+1,?___awmod+1
   443  0000C0  0012               	return		;funcret
   444  0000C2                     __end_of___awmod:
   445                           	callstack 0
   446  0000                     
   447                           	psect	rparam
   448  0000                     
   449                           	psect	temp
   450  00000D                     btemp:
   451                           	callstack 0
   452  00000D                     	ds	1
   453  0000                     int$flags	set	btemp
   454  0000                     wtemp8	set	btemp+1
   455  0000                     ttemp5	set	btemp+1
   456  0000                     ttemp6	set	btemp+4
   457  0000                     ttemp7	set	btemp+8
   458                           
   459                           	psect	idloc
   460                           
   461                           ;Config register IDLOC0 @ 0x200000
   462                           ;	unspecified, using default values
   463  200000                     	org	2097152
   464  200000  FF                 	db	255
   465                           
   466                           ;Config register IDLOC1 @ 0x200001
   467                           ;	unspecified, using default values
   468  200001                     	org	2097153
   469  200001  FF                 	db	255
   470                           
   471                           ;Config register IDLOC2 @ 0x200002
   472                           ;	unspecified, using default values
   473  200002                     	org	2097154
   474  200002  FF                 	db	255
   475                           
   476                           ;Config register IDLOC3 @ 0x200003
   477                           ;	unspecified, using default values
   478  200003                     	org	2097155
   479  200003  FF                 	db	255
   480                           
   481                           ;Config register IDLOC4 @ 0x200004
   482                           ;	unspecified, using default values
   483  200004                     	org	2097156
   484  200004  FF                 	db	255
   485                           
   486                           ;Config register IDLOC5 @ 0x200005
   487                           ;	unspecified, using default values
   488  200005                     	org	2097157
   489  200005  FF                 	db	255
   490                           
   491                           ;Config register IDLOC6 @ 0x200006
   492                           ;	unspecified, using default values
   493  200006                     	org	2097158
   494  200006  FF                 	db	255
   495                           
   496                           ;Config register IDLOC7 @ 0x200007
   497                           ;	unspecified, using default values
   498  200007                     	org	2097159
   499  200007  FF                 	db	255
   500                           
   501                           	psect	config
   502                           
   503                           ; Padding undefined space
   504  300000                     	org	3145728
   505  300000  FF                 	db	255
   506                           
   507                           ;Config register CONFIG1H @ 0x300001
   508                           ;	Oscillator Selection bits
   509                           ;	OSC = XT, XT oscillator
   510                           ;	Fail-Safe Clock Monitor Enable bit
   511                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   512                           ;	Internal/External Oscillator Switchover bit
   513                           ;	IESO = OFF, Oscillator Switchover mode disabled
   514  300001                     	org	3145729
   515  300001  01                 	db	1
   516                           
   517                           ;Config register CONFIG2L @ 0x300002
   518                           ;	Power-up Timer Enable bit
   519                           ;	PWRT = OFF, PWRT disabled
   520                           ;	Brown-out Reset Enable bits
   521                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   522                           ;	Brown Out Reset Voltage bits
   523                           ;	BORV = 3, Minimum setting
   524  300002                     	org	3145730
   525  300002  19                 	db	25
   526                           
   527                           ;Config register CONFIG2H @ 0x300003
   528                           ;	Watchdog Timer Enable bit
   529                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   530                           ;	Watchdog Timer Postscale Select bits
   531                           ;	WDTPS = 32768, 1:32768
   532  300003                     	org	3145731
   533  300003  1E                 	db	30
   534                           
   535                           ; Padding undefined space
   536  300004                     	org	3145732
   537  300004  FF                 	db	255
   538                           
   539                           ;Config register CONFIG3H @ 0x300005
   540                           ;	CCP2 MUX bit
   541                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   542                           ;	PORTB A/D Enable bit
   543                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   544                           ;	Low-Power Timer1 Oscillator Enable bit
   545                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   546                           ;	MCLR Pin Enable bit
   547                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   548  300005                     	org	3145733
   549  300005  81                 	db	129
   550                           
   551                           ;Config register CONFIG4L @ 0x300006
   552                           ;	Stack Full/Underflow Reset Enable bit
   553                           ;	STVREN = ON, Stack full/underflow will cause Reset
   554                           ;	Single-Supply ICSP Enable bit
   555                           ;	LVP = OFF, Single-Supply ICSP disabled
   556                           ;	Extended Instruction Set Enable bit
   557                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   558                           ;	Background Debugger Enable bit
   559                           ;	DEBUG = 0x1, unprogrammed default
   560  300006                     	org	3145734
   561  300006  81                 	db	129
   562                           
   563                           ; Padding undefined space
   564  300007                     	org	3145735
   565  300007  FF                 	db	255
   566                           
   567                           ;Config register CONFIG5L @ 0x300008
   568                           ;	Code Protection bit
   569                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   570                           ;	Code Protection bit
   571                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   572                           ;	Code Protection bit
   573                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   574                           ;	Code Protection bit
   575                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   576  300008                     	org	3145736
   577  300008  0F                 	db	15
   578                           
   579                           ;Config register CONFIG5H @ 0x300009
   580                           ;	Boot Block Code Protection bit
   581                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   582                           ;	Data EEPROM Code Protection bit
   583                           ;	CPD = OFF, Data EEPROM not code-protected
   584  300009                     	org	3145737
   585  300009  C0                 	db	192
   586                           
   587                           ;Config register CONFIG6L @ 0x30000A
   588                           ;	Write Protection bit
   589                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   590                           ;	Write Protection bit
   591                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   592                           ;	Write Protection bit
   593                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   594                           ;	Write Protection bit
   595                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   596  30000A                     	org	3145738
   597  30000A  0F                 	db	15
   598                           
   599                           ;Config register CONFIG6H @ 0x30000B
   600                           ;	Configuration Register Write Protection bit
   601                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   602                           ;	Boot Block Write Protection bit
   603                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   604                           ;	Data EEPROM Write Protection bit
   605                           ;	WRTD = OFF, Data EEPROM not write-protected
   606  30000B                     	org	3145739
   607  30000B  E0                 	db	224
   608                           
   609                           ;Config register CONFIG7L @ 0x30000C
   610                           ;	Table Read Protection bit
   611                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   612                           ;	Table Read Protection bit
   613                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   614                           ;	Table Read Protection bit
   615                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   616                           ;	Table Read Protection bit
   617                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   618  30000C                     	org	3145740
   619  30000C  0F                 	db	15
   620                           
   621                           ;Config register CONFIG7H @ 0x30000D
   622                           ;	Boot Block Table Read Protection bit
   623                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   624  30000D                     	org	3145741
   625  30000D  40                 	db	64
   626                           tosu	equ	0xFFF
   627                           tosh	equ	0xFFE
   628                           tosl	equ	0xFFD
   629                           stkptr	equ	0xFFC
   630                           pclatu	equ	0xFFB
   631                           pclath	equ	0xFFA
   632                           pcl	equ	0xFF9
   633                           tblptru	equ	0xFF8
   634                           tblptrh	equ	0xFF7
   635                           tblptrl	equ	0xFF6
   636                           tablat	equ	0xFF5
   637                           prodh	equ	0xFF4
   638                           prodl	equ	0xFF3
   639                           indf0	equ	0xFEF
   640                           postinc0	equ	0xFEE
   641                           postdec0	equ	0xFED
   642                           preinc0	equ	0xFEC
   643                           plusw0	equ	0xFEB
   644                           fsr0h	equ	0xFEA
   645                           fsr0l	equ	0xFE9
   646                           wreg	equ	0xFE8
   647                           indf1	equ	0xFE7
   648                           postinc1	equ	0xFE6
   649                           postdec1	equ	0xFE5
   650                           preinc1	equ	0xFE4
   651                           plusw1	equ	0xFE3
   652                           fsr1h	equ	0xFE2
   653                           fsr1l	equ	0xFE1
   654                           bsr	equ	0xFE0
   655                           indf2	equ	0xFDF
   656                           postinc2	equ	0xFDE
   657                           postdec2	equ	0xFDD
   658                           preinc2	equ	0xFDC
   659                           plusw2	equ	0xFDB
   660                           fsr2h	equ	0xFDA
   661                           fsr2l	equ	0xFD9
   662                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      6      12
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _timer_overflow_interrupt in COMRAM

    _timer_overflow_interrupt->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer_overflow_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_overflow_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_overflow_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_overflow_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer_overflow_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer_overflow_interrupt in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _timer_overflow_interrupt                             0     0      0     448
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _timer_overflow_interrupt (ROOT)
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      6       C       1        9.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       C      15        0.0%
DATA                 0      0       C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Nov 30 23:00:34 2021

                               l31 0166                                 l32 0166  
                              l770 0152                                l772 0156  
                              l774 015C                       ___awmod@sign 000C  
                             i2l26 014E                               _TMR1 000FCE  
                             _main 0152                               _hour 0005  
                             btemp 000D                               start 000E  
                     ___param_bank 000000                              ?_main 0007  
                  __end_of___awmod 00C2                              _T1CON 000FCD  
                            i2l281 00C0                              i2l800 0094  
                            i2l802 009A                              i2l804 00A0  
                            i2l820 00E0                              i2l812 00C4  
                            i2l806 00B0                              i2l830 012C  
                            i2l822 00FC                              i2l814 00D2  
                            i2l808 00B8                              i2l824 0104  
                            i2l816 00D4                              i2l832 014C  
                            i2l826 0108                              i2l818 00DC  
                            i2l780 0024                              i2l828 0124  
                            i2l790 0058                              i2l782 002C  
                            i2l792 0060                              i2l784 0030  
                            i2l776 0012                              i2l794 0068  
                            i2l786 003E                              i2l778 0016  
                            i2l796 0076                              i2l788 0046  
                            i2l798 008C                              ttemp5 000E  
                            ttemp6 0011                              ttemp7 0015  
                            status 000FD8                              wtemp8 000E  
                  __initialization 016E                       __end_of_main 016E  
                           ??_main 000D                      __activetblptr 000000  
                           _INTCON 000FF2                             _TMR1IF 007CF0  
         _timer_overflow_interrupt 0008                          ??___awmod 000B  
                           _minute 0003                             _second 0001  
                  ___awmod@divisor 0009                             isa$std 000001  
                  ___awmod@counter 000B                         __accesstop 0080  
          __end_of__initialization 017A                      ___rparam_used 000001  
                   __pcstackCOMRAM 0007                            i2u10_40 0024  
                          i2u10_41 0020                            i2u11_40 003E  
                          i2u11_41 003A                            i2u12_40 0058  
                          i2u12_41 0054                            i2u13_40 0076  
                          i2u13_41 0072                            i2u14_40 008C  
                          i2u14_41 0088                            i2u15_40 00B0  
                          i2u15_41 00AC                            i2u16_40 00D2  
                          i2u16_41 00CE                            i2u17_40 00FC  
                          i2u17_41 00F8                            i2u18_40 0124  
                          i2u18_41 0120                            __Hparam 0000  
                          __Lparam 0000                            ___awmod 0012  
                          __pcinit 016E                            __ramtop 0600  
                          __ptext0 0152                            __ptext2 0012  
                 ___awmod@dividend 0007                     __pintcode_body 00C2  
             end_of_initialization 017A         ??_timer_overflow_interrupt 000D  
                          int_func 00C2                start_initialization 016E  
                      __pbssCOMRAM 0001   __end_of_timer_overflow_interrupt 0152  
                        __pintcode 0008                           ?___awmod 0007  
                         _PIE1bits 000F9D                           __Hrparam 0000  
                         __Lrparam 0000                   __size_of___awmod 00B0  
__size_of_timer_overflow_interrupt 014A          ?_timer_overflow_interrupt 0007  
                    __size_of_main 001C                           isa$xinst 000000  
                         int$flags 000D                           intlevel2 0000  
